{"version":3,"sources":["QuestionService/QuestionData.js","components/QuestionCard.js","components/Result.js","App.js","index.js"],"names":["qBank","questionId","question","answers","correct","n","Promise","resolve","sort","Math","random","slice","QuestionBox","options","selected","i","length","j","floor","temp","useState","answer","setAnswer","className","map","text","index","key","onClick","Result","score","playAgain","App","state","questionBank","responses","getQuestions","questionData","then","setState","computeAnswer","correctAnswer","this","href","title","QuestionCard","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAMA,G,MAAQ,CACZ,CACEC,WAAY,IACZC,SAAU,+CACVC,QAAS,CAAC,IAAK,IAAK,IAAK,KACzBC,QAAS,KAEX,CACEH,WAAY,IACZC,SAAU,kCACVC,QAAS,CAAC,kCACR,kCACA,kCACA,sCACFC,QAAS,mCAGX,CACEH,WAAY,IACZC,SAAU,iDACVC,QAAS,CAAC,YAAa,UAAW,UAAW,UAC7CC,QAAS,WAEX,CACEH,WAAY,IACZC,SAAU,4CACVC,QAAS,CAAC,oBAAqB,gBAAiB,UAAW,eAC3DC,QAAS,iBAEX,CACEH,WAAY,IACZC,SAAU,8DACVC,QAAS,CAAC,uBAAwB,0BAA2B,wBAAyB,sBACtFC,QAAS,sBAGX,CACEH,WAAY,IACZC,SAAU,+CACVC,QAAS,CAAC,IAAK,IAAK,IAAK,KACzBC,QAAS,KAEX,CACEH,WAAY,IACZC,SAAU,kCACVC,QAAS,CAAC,kCACR,kCACA,kCACA,sCACFC,QAAS,mCAGX,CACEH,WAAY,IACZC,SAAU,iDACVC,QAAS,CAAC,YAAa,UAAW,UAAW,UAC7CC,QAAS,WAEX,CACEH,WAAY,IACZC,SAAU,4CACVC,QAAS,CAAC,oBAAqB,gBAAiB,UAAW,eAC3DC,QAAS,iBAEX,CACEH,WAAY,IACZC,SAAU,8DACVC,QAAS,CAAC,uBAAwB,0BAA2B,wBAAyB,sBACtFC,QAAS,wBAUE,iBAACC,EAAD,uDAAK,GAAL,OACbC,QAAQC,QAAQP,EAAMQ,MAAK,iBAAM,GAAMC,KAAKC,YAAUC,MAAM,EAAGN,K,OChDlDO,EA7BK,SAAC,GAEnB,IAFwD,IAAnCV,EAAkC,EAAlCA,SAAUW,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAE/BC,EAAIF,EAAQG,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC3C,IAAME,EAAIR,KAAKS,MAAMT,KAAKC,SAAWK,GAC/BI,EAAON,EAAQE,GACrBF,EAAQE,GAAKF,EAAQI,GACrBJ,EAAQI,GAAKE,EANwC,MAS3BC,mBAASP,GATkB,mBAShDQ,EATgD,KASxCC,EATwC,KAUvD,OACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,YAAW,4BAAKrB,IAC9BmB,EAAOG,KAAI,SAACC,EAAMC,GAAP,OACV,4BACEC,IAAKD,EACLH,UAAU,YACVK,QAAS,WACPN,EAAU,CAACG,IACXX,EAASW,KAGVA,QCbII,EATA,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,UAAT,OACb,yBAAKR,UAAU,eACb,yBAAKA,UAAU,SAAf,cAAmCO,EAAnC,0BACA,4BAAQP,UAAU,UAAUK,QAASG,GAArC,iBCCiBC,E,4MAEjBC,MAAQ,CACJC,aAAc,GACdJ,MAAO,EACPK,UAAW,G,EAGfC,aAAe,WACXC,IAAeC,MAAK,SAAApC,GAChB,EAAKqC,SAAS,CACVL,aAAchC,Q,EAK1BsC,cAAgB,SAACnB,EAAQoB,GACjBpB,IAAWoB,EACX,EAAKF,SAAS,CACVT,MAAO,EAAKG,MAAMH,MAAQ,EAC1BK,UAAW,EAAKF,MAAME,UAAY,IAGtC,EAAKI,SAAS,CACVJ,UAAW,EAAKF,MAAME,UAAY,GAAK,EAAKF,MAAME,UAAY,EAAI,K,EAK9EJ,UAAY,WACR,EAAKK,eACL,EAAKG,SAAS,CACVT,MAAO,EACPK,UAAW,K,kEAKfO,KAAKN,iB,+BAGC,IAAD,OACL,OACI,yBAAKb,UAAU,aACX,yBAAKA,UAAU,SAAQ,4CACnB,oDAAyB,uBAAGoB,KAAK,yBAAyBC,MAAM,uBAAvC,cAC7B,yBAAKrB,UAAU,WACX,+CACA,4BACI,4BAAI,yFACJ,4BAAI,iHACJ,4BAAI,2GAIRmB,KAAKT,MAAMC,aAAalB,OAAS,GACjC0B,KAAKT,MAAME,UAAY,IACvBO,KAAKT,MAAMC,aAAaV,KACpB,gBAAGvB,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,QAAlC,OACI,kBAACyC,EAAD,CACI3C,SAAUA,EACVW,QAASV,EACTwB,IAAK1B,EACLa,SAAU,SAAAO,GAAM,OAAI,EAAKmB,cAAcnB,EAAQjB,SAIrC,KAAzBsC,KAAKT,MAAME,UAAoB,kBAAC,EAAD,CAAQL,MAAOY,KAAKT,MAAMH,MAAOC,UAAWW,KAAKX,YAAiB,U,GAnEjFe,aCFjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.4a209eff.chunk.js","sourcesContent":["const qBank = [\n  {\n    questionId: \"1\",\n    question: \"How many types of  main software are there ?\",\n    answers: [\"1\", \"2\", \"3\", \"4\"],\n    correct: \"2\",\n  },\n  {\n    questionId: \"2\",\n    question: \"What is the full from of SDLC ?\",\n    answers: [\"Software development live cycle\",\n      \"Software development leaf cycle\",\n      \"Software development life cycle\",\n      \"Software development life changing\"],\n    correct: \"Software development life cycle\",\n\n  },\n  {\n    questionId: \"3\",\n    question: \"Which of the following is not a part of SDLC ?\",\n    answers: [\"Designing\", \"Testing\", \"Hosting\", \"Coding\"],\n    correct: \"Hosting\"\n  },\n  {\n    questionId: \"4\",\n    question: \" Which of the following is a SDLC model ?\",\n    answers: [\"Decremental Model\", \"Bigbang Model\", \"X-Model\", \"Elite Model\"],\n    correct: \"Bigbang Model\"\n  },\n  {\n    questionId: \"5\",\n    question: \"Which of the following is not a type of Feasibility Study ?\",\n    answers: [\"Economic Feasibility\", \"Operational Feasibility\", \"Technical Feasibility\", \"Client Feasibility\"],\n    correct: \"Client Feasibility\"\n  },\n  // repeating question\n  {\n    questionId: \"1\",\n    question: \"How many types of  main software are there ?\",\n    answers: [\"1\", \"2\", \"3\", \"4\"],\n    correct: \"2\",\n  },\n  {\n    questionId: \"2\",\n    question: \"What is the full from of SDLC ?\",\n    answers: [\"Software development live cycle\",\n      \"Software development leaf cycle\",\n      \"Software development life cycle\",\n      \"Software development life changing\"],\n    correct: \"Software development life cycle\",\n\n  },\n  {\n    questionId: \"3\",\n    question: \"Which of the following is not a part of SDLC ?\",\n    answers: [\"Designing\", \"Testing\", \"Hosting\", \"Coding\"],\n    correct: \"Hosting\"\n  },\n  {\n    questionId: \"4\",\n    question: \" Which of the following is a SDLC model ?\",\n    answers: [\"Decremental Model\", \"Bigbang Model\", \"X-Model\", \"Elite Model\"],\n    correct: \"Bigbang Model\"\n  },\n  {\n    questionId: \"5\",\n    question: \"Which of the following is not a type of Feasibility Study ?\",\n    answers: [\"Economic Feasibility\", \"Operational Feasibility\", \"Technical Feasibility\", \"Client Feasibility\"],\n    correct: \"Client Feasibility\"\n  }\n  // {\n  //   question: \"\",\n  //   answers: [],\n  //   correct: \"\",\n  //   questionId: \"\"\n  // }\n];\n\nexport default (n = 10) =>\n  Promise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n));\n","import React, { useState } from \"react\";\n\nconst QuestionBox = ({ question, options, selected }) => {\n  // suffle the answer\n  for (let i = options.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * i)\n    const temp = options[i]\n    options[i] = options[j]\n    options[j] = temp\n  }\n\n  const [answer, setAnswer] = useState(options);\n  return (\n    <div className=\"questionCard\">\n      <div className=\"question\"><h2>{question}</h2></div>\n      {answer.map((text, index) => (\n        <button\n          key={index}\n          className=\"answerBtn\"\n          onClick={() => {\n            setAnswer([text]);\n            selected(text);\n          }}\n        >\n          {text}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default QuestionBox;\n","import React from \"react\";\n\nconst Result = ({score, playAgain}) => (\n  <div className=\"score-board\">\n    <div className=\"score\">You scored {score} / 10 correct answers!</div>\n    <button className=\"playBtn\" onClick={playAgain}>\n      Play again!\n    </button>\n  </div>\n);\n\nexport default Result;\n","import React, { Component } from 'react';\r\nimport './css/style.css';\r\nimport questionData from './QuestionService/QuestionData'\r\nimport QuestionCard from './components/QuestionCard';\r\nimport Result from './components/Result';\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        questionBank: [],\r\n        score: 0,\r\n        responses: 0\r\n    };\r\n\r\n    getQuestions = () => {\r\n        questionData().then(question => {\r\n            this.setState({\r\n                questionBank: question\r\n            });\r\n        });\r\n    };\r\n\r\n    computeAnswer = (answer, correctAnswer) => {\r\n        if (answer === correctAnswer) {\r\n            this.setState({\r\n                score: this.state.score + 1,\r\n                responses: this.state.responses + 1\r\n            });\r\n        } else {\r\n            this.setState({\r\n                responses: this.state.responses < 10 ? this.state.responses + 1 : 5\r\n            })\r\n        }\r\n    };\r\n\r\n    playAgain = () => {\r\n        this.getQuestions();\r\n        this.setState({\r\n            score: 0,\r\n            responses: 0\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuestions();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"title\"><h1>BCA MCQ TEST</h1>\r\n                    <p>Design and Develop by <a href=\"https://kcsajan.com.np\" title=\"Click for more info\">Sajan Kc</a></p></div>\r\n                <div className=\"warning\">\r\n                    <h2>*_*Becareful*_*</h2>\r\n                    <ol>\r\n                        <li><p>Every time you refresh the page questions will be change.</p></li>\r\n                        <li><p>Once you select the answer remaining are hidden and you can't change your answer.</p></li>\r\n                        <li><p>After completing all the questions you will be redirected to result page.</p></li>\r\n                    </ol>\r\n                </div>\r\n                {\r\n                    this.state.questionBank.length > 0 &&\r\n                    this.state.responses < 10 &&\r\n                    this.state.questionBank.map(\r\n                        ({ questionId, question, answers, correct }) =>\r\n                            <QuestionCard\r\n                                question={question}\r\n                                options={answers}\r\n                                key={questionId}\r\n                                selected={answer => this.computeAnswer(answer, correct)}\r\n                            />\r\n                    )\r\n                }\r\n                {this.state.responses === 10 ? (<Result score={this.state.score} playAgain={this.playAgain} />) : null}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}